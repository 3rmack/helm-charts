# Default values for mgob.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: stefanprodan/mgob
  tag: edge
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

storage:
  storrage:
    accessMode: "ReadWriteOnce"
    storageClass: "gp2" # Note: "gp2" is for AWS. Use the storage class for your cloud provider.
    size: 10Gi
  tmp:
    accessMode: "ReadWriteOnce"
    storageClass: "gp2" # Note: "gp2" is for AWS. Use the storage class for your cloud provider.
    size: 2Gi
  data:
    accessMode: "ReadWriteOnce"
    storageClass: "gp2" # Note: "gp2" is for AWS. Use the storage class for your cloud provider.
    size: 2Gi

configMap:
  data:
#    the-first-database.yml: |
#      target:
#        host: "mongodb-replicaset"
#        port: 27017
#        database: "my-database"
#        username: "mongodb-backup"
#        password: "backup-user-pwd"
#        params: "--authenticationDatabase admin"
#      scheduler:
#        cron: "0 5 * * *"
#        retention: 7
#        timeout: 60
#      s3:
#        url: "https://s3.amazonaws.com"
#        bucket: "my-db-backups"
#        accessKey: "ABCDEFGHIJKLMNOPQRST"
#        secretKey: "be0da49b599b24115c7f53c92c729cbb2c8a17e5"
#        api: "S3v4"
#      slack:
#        url: "https://hooks.slack.com/services/..."
#        channel: mongochan
#        username: mgob
#        # 'true' to notify only on failures
#        warnOnly: false
#
#    the-second-database.yml: |
#      target:
#        host: "mongodb-replicaset"
#        port: 27017
#        database: "my-database"
#        username: "mongodb-backup"
#        password: "backup-user-pwd"
#        params: "--authenticationDatabase admin"
#      scheduler:
#        cron: "0 5 * * *"
#        retention: 7
#        timeout: 60
#      s3:
#        url: "https://s3.amazonaws.com"
#        bucket: "my-db-backups"
#        accessKey: "ABCDEFGHIJKLMNOPQRST"
#        secretKey: "be0da49b599b24115c7f53c92c729cbb2c8a17e5"
#        api: "S3v4"
#      slack:
#        url: "https://hooks.slack.com/services/..."
#        channel: mongochan
#        username: mgob
#        # 'true' to notify only on failures
#        warnOnly: false
secret: {}
## You can either insert your secret values as part of helm values, or refer externally created secrets.
#- name: gcp-example-secret-name
#- name: gcp-example-secret-name-with-values
#  data:
#    service-account.json: |
#      {
#        "type": "service_account",
#        "project_id": "your-gcp-project-id",
#        "private_key_id": "12345678901234567890",
#        "private_key": "-----BEGIN PRIVATE KEY-----\n...........\n-----END PRIVATE KEY-----\n",
#        ...
#      }